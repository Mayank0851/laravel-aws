
name: Laravel CI/CD

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout the code
        uses: actions/checkout@v3

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, xml, bcmath, zip  # Add any required PHP extensions

      # Step 3: Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Step 4: Install dependencies using Composer
      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader --no-dev

      # Step 5: Cache Node.js modules and install dependencies
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node.js and dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js packages
        run: npm install

      # Step 6: Build assets using Vite
      - name: Build assets
        run: npm run build

      # Step 7: Sync files to AWS EC2
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          # Start the SSH agent
          eval "$(ssh-agent -s)"
          # Add the SSH key to the agent
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          # Sync files to EC2 using rsync, disable strict host key checking
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude=".env" --exclude="node_modules" --exclude="vendor" ./ "$USER@$HOST:/var/www/laravel"

      # Step 8: SSH into the server and run post-deployment commands
      - name: Run post-deployment commands
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}  # Set SSH key environment variable for usage
        run: |
          # Start the SSH agent
          eval "$(ssh-agent -s)"
          # Add the SSH key to the agent
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          # SSH into the server and run commands
          ssh -v -o StrictHostKeyChecking=no "$USER@$HOST" << 'EOF'
            cd /var/www/laravel
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart nginx
          EOF
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1
